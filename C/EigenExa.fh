#pragma once

#ifdef __cplusplus
extern  "C" {
#endif
//
// internal Fortran callee APIs
// 
#define	F_eigen_init	eigen_libs_eigen_init_
#define	F_eigen_free	eigen_libs_eigen_free_
#define	F_eigen_s	eigen_libs_eigen_s_
#define	F_eigen_sx	eigen_libs_eigen_sx_
#define	F_eigen_h	eigen_libs_eigen_h_
#define	F_eigen_get_version	eigen_libs0_eigen_get_version_
#define	F_eigen_get_procs	eigen_libs0_eigen_get_procs_
#define	F_eigen_get_id		eigen_libs0_eigen_get_id_
#define	F_eigen_get_comm	eigen_libs0_eigen_get_comm_
#define	F_eigen_get_matdims	eigen_libs_eigen_get_matdims_

extern void F_eigen_init (MPI_Fint *comm_F, char const *order);
extern void F_eigen_free (void);

extern void F_eigen_s
	(int *n_F, int *n_vec_F, double *a, int *lda_F, double *w, double *z, int *ldz_F, int *m_f_F, int *m_b_F, char const *mode);
extern void F_eigen_sx
	(int *n_F, int *n_vec_F, double *a, int *lda_F, double *w, double *z, int *ldz_F, int *m_f_F, int *m_b_F, char const *mode);
extern void F_eigen_h
	(int *n_F, int *n_vec_F, double *a, int *lda_F, double *w, double *z, int *ldz_F, int *m_f_F, int *m_b_F, char const *mode);

extern void F_eigen_get_version
	(int *version, char *date, char *vcode, int len_data, int len_vcode);
extern void F_eigen_get_procs
	(int *nnod, int *x_nnod, int *y_nnod);
extern void F_eigen_get_id
	(int *inod, int *x_inod, int *y_inod);
extern void F_eigen_get_comm
	(MPI_Fint *comm, MPI_Fint *x_comm, MPI_Fint *y_comm);
extern void F_eigen_get_matdims
	(int *n_F, int *nx, int *ny, int *m_f_F, int *m_b_F, char const *mode);

#ifdef __cplusplus
}
#endif
